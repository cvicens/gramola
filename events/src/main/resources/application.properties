# HTTP Port
%dev.quarkus.http.port=8081

# Enable logging
quarkus.log.console.enable=true
quarkus.log.console.level=DEBUG

# Log level settings
quarkus.log.category."com.redhat.gramola".level=DEBUG

# custom properties
greetings.message = hello

# welcome message
gramola.welcome-message = \${WELCOME_MESSAGE:Welcome}

# Data Base related properties

# `none` to leave the databas as is - the operator will take care of it
quarkus.datasource.url = jdbc:postgresql://${DB_SERVICE_NAME}:${DB_SERVICE_PORT}/${DB_NAME}
quarkus.datasource.driver = org.postgresql.Driver
quarkus.hibernate-orm.dialect = org.hibernate.dialect.PostgreSQL95Dialect
quarkus.datasource.username = ${DB_USERNAME}
quarkus.datasource.password = ${DB_PASSWORD}
quarkus.hibernate-orm.database.generation = none
quarkus.hibernate-orm.sql-load-script = no-file

# `drop and create` the database at startup
%dev.quarkus.datasource.url=jdbc:h2:mem:myDB
%dev.quarkus.datasource.driver=org.h2.Driver
%dev.quarkus.datasource.username=username-default
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script = import.sql

# `update` to only update the schema
%test.quarkus.datasource.url = jdbc:postgresql://${DB_SERVICE_NAME}:${DB_SERVICE_PORT}/${DB_NAME}
%test.quarkus.datasource.driver = org.postgresql.Driver
%test.quarkus.hibernate-orm.dialect = org.hibernate.dialect.PostgreSQL95Dialect
%test.quarkus.datasource.username = ${DB_USERNAME}
%test.quarkus.datasource.password = ${DB_PASSWORD}
%test.quarkus.hibernate-orm.database.generation = update
%test.quarkus.hibernate-orm.sql-load-script = import.sql

# show sql statements in log
quarkus.hibernate-orm.log.sql = true
